package edu.rice.rubbos.servlets;

import edu.rice.rubbos.*;
import java.io.PrintWriter;
import java.io.IOException;
import java.io.FileNotFoundException;
import java.io.FileReader;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.GregorianCalendar;
import java.sql.*;
import java.net.URLEncoder;

/** In fact, this class is not a servlet itself but it provides
 * output services to servlets to send back HTML files.
 * @author <a href="mailto:cecchet@rice.edu">Emmanuel Cecchet</a> and <a href="mailto:julie.marguerite@inrialpes.fr">Julie Marguerite</a>
 * @version 1.0
 */

public class ServletPrinter
{
  private PrintWriter       out;
  private String            servletName;
  private GregorianCalendar startDate;


  public ServletPrinter(HttpServletResponse toWebServer, String callingServletName)
  {
    startDate = new GregorianCalendar();
    toWebServer.setContentType("text/html");
    try
    {
      out = toWebServer.getWriter();
    }
    catch (IOException ioe)
    {
      ioe.printStackTrace();
    }
    servletName = callingServletName;
  }

  void printFile (String filename)
  {
    FileReader fis = null;
    try
    {
      fis = new FileReader(filename);
      char[] data = new char[4*1024]; // 4K buffer
      int    bytesRead;
      bytesRead = fis.read(data);
      while (/*(bytesRead = fis.read(data))*/ bytesRead != -1)
      {
        out.write(data, 0, bytesRead);
	bytesRead = fis.read(data);
      }
    }
    catch (Exception e)
    {
      out.println("Unable to read file (exception: "+e+")<br>");
    }
    finally
    {
      if (fis != null)
        try
        {
          fis.close();
        }
      catch (Exception ex)
      {
        out.println("Unable to close the file reader (exception: "+ex+")<br>"); 
      }
    }
  }

  void printHTMLheader(String title)
  {
    printFile(Config.HTMLFilesPath+"/header.html");
    out.println("<title>"+title+"</title>");
  }

  void printHTMLfooter()
  {
    GregorianCalendar endDate = new GregorianCalendar();

    out.println("<br><hr>RUBBoS (C) Rice University/INRIA<br><i>Page generated by "+servletName+" in "+TimeManagement.diffTime(startDate, endDate)+"</i><br>");
    out.println("</body>");
    out.println("</html>");	
  }

  void printHTML(String msg)
  {
    out.println(msg);
  }

  void printHTMLHighlighted(String msg)
  {
    out.println("<TABLE width=\"100%\" bgcolor=\"#CCCCFF\">");
    out.println("<TR><TD align=\"center\" width=\"100%\"><FONT size=\"4\" color=\"#000000\"><B>"+msg+"</B></FONT></TD></TR>");
    out.println("</TABLE><p>");
  }
    
    
    public String authenticate(String nickname, String password, Connection conn)
    {
	try 
	    {
		PreparedStatement stmt= conn.prepareStatement("SELECT id FROM users WHERE nickname=\""+nickname+"\" AND password=\""+password+"\"");
		ResultSet rs = stmt.executeQuery();
		rs.first();
		if (!rs.first())
		    return "0"; // 0 is the anonymous user
		return rs.getString("id"); 
		
	    }
	catch (Exception e)
	    {
		return e+ "Authenticate function error";
		
	    }
    }


  
  public String getUserName(int UserId, Connection conn) throws Exception
  {
    try
    {
      PreparedStatement stmt = conn.prepareStatement("SELECT nickname FROM users WHERE id=?");
      stmt.setInt(1, UserId);
      ResultSet rs = stmt.executeQuery();
      rs.first();
      return rs.getString("nickname");
    }
    catch (Exception e)
    {
      throw e;
    }
       
  }

}
